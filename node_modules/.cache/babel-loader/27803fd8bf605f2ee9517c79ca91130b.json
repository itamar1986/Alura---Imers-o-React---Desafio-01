{"ast":null,"code":"import React from'react';import{InputStyle,LabelStyle,TextAreaStyle}from'./styles';function FormField(_ref){var label=_ref.label,value=_ref.value,type=_ref.type,name=_ref.name,onChange=_ref.onChange,suggestions=_ref.suggestions;var fieldId=\"id_\".concat(name);var hasSuggestions=Boolean(suggestions.length);if(label==='Descrição da Categoria'||label==='Descrição do Pokémon'){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(LabelStyle,{htmlFor:fieldId},label,/*#__PURE__*/React.createElement(TextAreaStyle,{type:type,value:value,name:name,onChange:onChange})));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(LabelStyle,{htmlFor:fieldId},label,/*#__PURE__*/React.createElement(InputStyle,{type:type,value:value,name:name,onChange:onChange,autoComplete:\"off\",list:\"suggestionFor_\".concat(fieldId)})),hasSuggestions&&/*#__PURE__*/React.createElement(\"datalist\",{id:\"suggestionFor_\".concat(fieldId)},suggestions.map(function(suggestion){return/*#__PURE__*/React.createElement(\"option\",{value:suggestion,key:\"suggestionFor_\".concat(fieldId,\"_option\").concat(suggestion)},suggestion);})));}FormField.defaultProps={value:'',type:'text',onChange:function onChange(){},suggestions:[]};export default FormField;","map":{"version":3,"sources":["/home/itamar/Alura---Imers-o-React---Desafio-01/src/components/Form/index.js"],"names":["React","InputStyle","LabelStyle","TextAreaStyle","FormField","label","value","type","name","onChange","suggestions","fieldId","hasSuggestions","Boolean","length","map","suggestion","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,UAAT,CAAqBC,UAArB,CAAiCC,aAAjC,KAAsD,UAAtD,CAEA,QAASC,CAAAA,SAAT,MAEG,IADFC,CAAAA,KACE,MADFA,KACE,CADKC,KACL,MADKA,KACL,CADYC,IACZ,MADYA,IACZ,CADkBC,IAClB,MADkBA,IAClB,CADwBC,QACxB,MADwBA,QACxB,CADkCC,WAClC,MADkCA,WAClC,CACF,GAAMC,CAAAA,OAAO,cAASH,IAAT,CAAb,CAEA,GAAMI,CAAAA,cAAc,CAAGC,OAAO,CAACH,WAAW,CAACI,MAAb,CAA9B,CAEA,GAAIT,KAAK,GAAK,wBAAV,EAAsCA,KAAK,GAAK,sBAApD,CAA4E,CAC3E,mBACC,qDACC,oBAAC,UAAD,EAAY,OAAO,CAAEM,OAArB,EACEN,KADF,cAGC,oBAAC,aAAD,EAAe,IAAI,CAAEE,IAArB,CAA2B,KAAK,CAAED,KAAlC,CAAyC,IAAI,CAAEE,IAA/C,CAAqD,QAAQ,CAAEC,QAA/D,EAHD,CADD,CADD,CAUA,CAED,mBACC,qDACC,oBAAC,UAAD,EAAY,OAAO,CAAEE,OAArB,EACEN,KADF,cAGC,oBAAC,UAAD,EACC,IAAI,CAAEE,IADP,CAEC,KAAK,CAAED,KAFR,CAGC,IAAI,CAAEE,IAHP,CAIC,QAAQ,CAAEC,QAJX,CAKC,YAAY,CAAC,KALd,CAMC,IAAI,yBAAmBE,OAAnB,CANL,EAHD,CADD,CAeEC,cAAc,eACd,gCAAU,EAAE,yBAAmBD,OAAnB,CAAZ,EAEED,WAAW,CAACK,GAAZ,CAAgB,SAACC,UAAD,qBACf,8BAAQ,KAAK,CAAEA,UAAf,CAA2B,GAAG,yBAAmBL,OAAnB,mBAAoCK,UAApC,CAA9B,EACEA,UADF,CADe,EAAhB,CAFF,CAhBF,CADD,CA+BA,CAEDZ,SAAS,CAACa,YAAV,CAAyB,CACxBX,KAAK,CAAE,EADiB,CAExBC,IAAI,CAAE,MAFkB,CAGxBE,QAAQ,CAAE,mBAAM,CAAE,CAHM,CAIxBC,WAAW,CAAE,EAJW,CAAzB,CAkBA,cAAeN,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { InputStyle, LabelStyle, TextAreaStyle } from './styles';\n\nfunction FormField({\n\tlabel, value, type, name, onChange, suggestions,\n}) {\n\tconst fieldId = `id_${name}`;\n\n\tconst hasSuggestions = Boolean(suggestions.length);\n\n\tif (label === 'Descrição da Categoria' || label === 'Descrição do Pokémon') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<LabelStyle htmlFor={fieldId}>\n\t\t\t\t\t{label}\n\n\t\t\t\t\t<TextAreaStyle type={type} value={value} name={name} onChange={onChange} />\n\n\t\t\t\t</LabelStyle>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<LabelStyle htmlFor={fieldId}>\n\t\t\t\t{label}\n\n\t\t\t\t<InputStyle \n\t\t\t\t\ttype={type} \n\t\t\t\t\tvalue={value} \n\t\t\t\t\tname={name} \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tautoComplete=\"off\" \n\t\t\t\t\tlist={`suggestionFor_${fieldId}`} \n\t\t\t\t/>\n\n\t\t\t</LabelStyle>\n\n\t\t\t{hasSuggestions && (\n\t\t\t\t<datalist id={`suggestionFor_${fieldId}`}>\n\t\t\t\t\t{\n\t\t\t\t\t\tsuggestions.map((suggestion) => (\n\t\t\t\t\t\t\t<option value={suggestion} key={`suggestionFor_${fieldId}_option${suggestion}`}>\n\t\t\t\t\t\t\t\t{suggestion}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</datalist>\n\n\t\t\t)}\n            \n\t\t</>\n\t);\n}\n\nFormField.defaultProps = {\n\tvalue: '',\n\ttype: 'text',\n\tonChange: () => {},\n\tsuggestions: [],\n\t\n};\n\nFormField.propTypes = {\n\tlabel: PropTypes.string.isRequired,\n\tvalue: PropTypes.string,\n\ttype: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\tonChange: PropTypes.func,\n\tsuggestions: PropTypes.arrayOf(PropTypes.string),\n\n};\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}