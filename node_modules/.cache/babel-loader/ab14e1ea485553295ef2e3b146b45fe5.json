{"ast":null,"code":"import _regeneratorRuntime from\"/home/itamar/Alura---Imers-o-React---Desafio-01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/itamar/Alura---Imers-o-React---Desafio-01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import config from'../config';var videos=\"\".concat(config.url,\"/videos\");function create(videoObject){return fetch(\"\".concat(videos,\"?_embed=videos\"),{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify(videoObject)}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!response.ok){_context.next=5;break;}_context.next=3;return response.json();case 3:resp=_context.sent;return _context.abrupt(\"return\",resp);case 5:throw new Error('não foi possível carregar os dados.');case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}export default{create:create};","map":{"version":3,"sources":["/home/itamar/Alura---Imers-o-React---Desafio-01/src/repositories/videos.js"],"names":["config","videos","url","create","videoObject","fetch","method","headers","body","JSON","stringify","then","response","ok","json","resp","Error"],"mappings":"yUAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,MAAM,WAAMD,MAAM,CAACE,GAAb,WAAZ,CAEA,QAASC,CAAAA,MAAT,CAAgBC,WAAhB,CAA6B,CAC5B,MAAOC,CAAAA,KAAK,WAAIJ,MAAJ,mBAA4B,CACvCK,MAAM,CAAE,MAD+B,CAEvCC,OAAO,CAAE,CACR,eAAgB,kBADR,CAF8B,CAKvCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CALiC,CAA5B,CAAL,CAOJO,IAPI,0FAOC,iBAAOC,QAAP,+HACHA,QAAQ,CAACC,EADN,+CAEaD,CAAAA,QAAQ,CAACE,IAAT,EAFb,QAEAC,IAFA,+CAGCA,IAHD,cAMD,IAAIC,CAAAA,KAAJ,CAAU,qCAAV,CANC,uDAPD,+DAAP,CAeA,CAED,cAAe,CACdb,MAAM,CAANA,MADc,CAAf","sourcesContent":["import config from '../config';\n\nconst videos = `${config.url}/videos`;\n\nfunction create(videoObject) {\n\treturn fetch(`${videos}?_embed=videos`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(videoObject),\n\t\t\n\t}).then(async (response) => {\n\t\tif (response.ok) {\n\t\t\tconst resp = await response.json();\n\t\t\treturn resp;\n\t\t}\n\n\t\tthrow new Error('não foi possível carregar os dados.');\n\t});\n}\n\nexport default {\n\tcreate,\n};\n"]},"metadata":{},"sourceType":"module"}