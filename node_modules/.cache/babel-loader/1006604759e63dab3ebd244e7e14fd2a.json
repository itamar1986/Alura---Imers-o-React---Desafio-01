{"ast":null,"code":"import _regeneratorRuntime from\"/home/itamar/Alura---Imers-o-React---Desafio-01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/itamar/Alura---Imers-o-React---Desafio-01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import config from'../config';var categories=\"\".concat(config.url,\"/categorias\");function create(CategoryObject){return fetch(\"\".concat(categories),{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify(CategoryObject)}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!response.ok){_context.next=5;break;}_context.next=3;return response.json();case 3:resp=_context.sent;return _context.abrupt(\"return\",resp);case 5:throw new Error('não foi possível carregar os dados.');case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}function getAllVideos(){return fetch(\"\".concat(categories,\"?_embed=videos\")).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response){var resp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!response.ok){_context2.next=5;break;}_context2.next=3;return response.json();case 3:resp=_context2.sent;return _context2.abrupt(\"return\",resp);case 5:throw new Error('não foi possível carregar os dados.');case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());}function getAll(){return fetch(\"\".concat(categories)).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(response){var resp;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!response.ok){_context3.next=5;break;}_context3.next=3;return response.json();case 3:resp=_context3.sent;return _context3.abrupt(\"return\",resp);case 5:throw new Error('não foi possível carregar os dados.');case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());}export default{getAllVideos:getAllVideos,getAll:getAll,create:create};","map":{"version":3,"sources":["/home/itamar/Alura---Imers-o-React---Desafio-01/src/repositories/categories.js"],"names":["config","categories","url","create","CategoryObject","fetch","method","headers","body","JSON","stringify","then","response","ok","json","resp","Error","getAllVideos","getAll"],"mappings":"yUAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,UAAU,WAAMD,MAAM,CAACE,GAAb,eAAhB,CAEA,QAASC,CAAAA,MAAT,CAAgBC,cAAhB,CAAgC,CAC/B,MAAOC,CAAAA,KAAK,WAAIJ,UAAJ,EAAkB,CAC7BK,MAAM,CAAE,MADqB,CAE7BC,OAAO,CAAE,CACR,eAAgB,kBADR,CAFoB,CAK7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,cAAf,CALuB,CAAlB,CAAL,CAOJO,IAPI,0FAOC,iBAAOC,QAAP,+HACHA,QAAQ,CAACC,EADN,+CAEaD,CAAAA,QAAQ,CAACE,IAAT,EAFb,QAEAC,IAFA,+CAGCA,IAHD,cAMD,IAAIC,CAAAA,KAAJ,CAAU,qCAAV,CANC,uDAPD,+DAAP,CAeA,CAED,QAASC,CAAAA,YAAT,EAAwB,CACvB,MAAOZ,CAAAA,KAAK,WAAIJ,UAAJ,mBAAL,CAAqCU,IAArC,2FAA0C,kBAAOC,QAAP,mIAC5CA,QAAQ,CAACC,EADmC,iDAE5BD,CAAAA,QAAQ,CAACE,IAAT,EAF4B,QAEzCC,IAFyC,iDAGxCA,IAHwC,cAM1C,IAAIC,CAAAA,KAAJ,CAAU,qCAAV,CAN0C,yDAA1C,iEAAP,CAQA,CAED,QAASE,CAAAA,MAAT,EAAkB,CACjB,MAAOb,CAAAA,KAAK,WAAIJ,UAAJ,EAAL,CAAuBU,IAAvB,2FAA4B,kBAAOC,QAAP,mIAC9BA,QAAQ,CAACC,EADqB,iDAEdD,CAAAA,QAAQ,CAACE,IAAT,EAFc,QAE3BC,IAF2B,iDAG1BA,IAH0B,cAM5B,IAAIC,CAAAA,KAAJ,CAAU,qCAAV,CAN4B,yDAA5B,iEAAP,CAQA,CAED,cAAe,CACdC,YAAY,CAAZA,YADc,CAEdC,MAAM,CAANA,MAFc,CAGdf,MAAM,CAANA,MAHc,CAAf","sourcesContent":["import config from '../config';\n\nconst categories = `${config.url}/categorias`;\n\nfunction create(CategoryObject) {\n\treturn fetch(`${categories}`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(CategoryObject),\n\t\t\n\t}).then(async (response) => {\n\t\tif (response.ok) {\n\t\t\tconst resp = await response.json();\n\t\t\treturn resp;\n\t\t}\n\n\t\tthrow new Error('não foi possível carregar os dados.');\n\t});\n}\n\nfunction getAllVideos() {\n\treturn fetch(`${categories}?_embed=videos`).then(async (response) => {\n\t\tif (response.ok) {\n\t\t\tconst resp = await response.json();\n\t\t\treturn resp;\n\t\t}\n\n\t\tthrow new Error('não foi possível carregar os dados.');\n\t});\n}\n\nfunction getAll() {\n\treturn fetch(`${categories}`).then(async (response) => {\n\t\tif (response.ok) {\n\t\t\tconst resp = await response.json();\n\t\t\treturn resp;\n\t\t}\n\n\t\tthrow new Error('não foi possível carregar os dados.');\n\t});\n}\n\nexport default {\n\tgetAllVideos,\n\tgetAll,\n\tcreate,\n};\n"]},"metadata":{},"sourceType":"module"}